{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charlie\\\\Desktop\\\\Webdev\\\\Zero to Mastery\\\\Backend\\\\smart-brain\\\\frontend\\\\src\\\\containers\\\\App.jsx\";\nimport React from 'react';\nimport './App.css';\nimport Navigation from '../components/navigation/Navigation.jsx';\nimport Logo from '../components/logo/Logo.jsx';\nimport ImageLinkForm from '../components/image link form/ImageLinkForm';\nimport Rank from '../components/rank/Rank.jsx';\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition.jsx';\nimport Signin from '../components/signin form/Signin.jsx';\nimport Register from '../components/register form/Register.jsx';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    }\n  }\n};\nconst app = new Clarifai.App({\n  apiKey: '3160b1eb71a7425b8b78e134bf56e940'\n});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.changeRoute = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.signIn = () => {\n      this.setState({\n        signedIn: true\n      });\n    };\n\n    this.signOut = () => {\n      this.setState({\n        signedIn: false\n      });\n    };\n\n    this.loadUser = data => {\n      this.setState({\n        user: { ...data\n        }\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = async () => {\n      this.setState({\n        imageUrl: this.state.input,\n        boxes: []\n      });\n\n      try {\n        const clarifaiResp = await app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input);\n\n        if (clarifaiResp) {\n          const serverResp = await fetch('http://localhost:5000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          });\n          const entryCount = await serverResp.json();\n          this.setState({\n            user: {\n              entries: entryCount\n            }\n          });\n        }\n\n        const faceBoxes = await clarifaiResp.outputs[0].data.regions.map(region => region.region_info.bounding_box);\n        const faceLocs = [];\n\n        for (let box of faceBoxes) {\n          faceLocs.push(this.calculateFaceLocation(box));\n        }\n\n        this.setState({\n          boxes: faceLocs\n        });\n      } catch (error) {\n        console.log('oops', error);\n      }\n    };\n\n    this.calculateFaceLocation = boxData => {\n      const image = document.getElementById('input-image');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: boxData.left_col * width,\n        topRow: boxData.top_row * height,\n        rightCol: width - boxData.right_col * width,\n        bottomRow: height - boxData.bottom_row * height\n      };\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      boxes: [],\n      route: 'signin',\n      signedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      imageUrl,\n      boxes,\n      route,\n      signedIn\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particleOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        changeRoute: this.changeRoute,\n        isSignedIn: signedIn,\n        signOut: this.signOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), (() => {\n        if (route === 'signin') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Signin, {\n              changeRoute: this.changeRoute,\n              signIn: this.signIn,\n              loadUser: this.loadUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }, this);\n        } else if (route === 'home') {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Rank, {\n              name: this.state.user.name,\n              entryCount: this.state.user.entries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n              onInputChange: this.onInputChange,\n              onButtonSubmit: this.onSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n              imageUrl: imageUrl,\n              boxes: boxes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 9\n          }, this);\n        } else if (route === 'register') {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Register, {\n              changeRoute: this.changeRoute,\n              signIn: this.signIn,\n              loadUser: this.loadUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 9\n          }, this);\n        }\n      })()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Charlie/Desktop/Webdev/Zero to Mastery/Backend/smart-brain/frontend/src/containers/App.jsx"],"names":["React","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","Particles","Clarifai","particleOptions","particles","number","value","density","enable","value_area","line_linked","shadow","color","blur","app","App","apiKey","Component","constructor","changeRoute","route","setState","signIn","signedIn","signOut","loadUser","data","user","onInputChange","event","input","target","onSubmit","imageUrl","state","boxes","clarifaiResp","models","predict","FACE_DETECT_MODEL","serverResp","fetch","method","headers","body","JSON","stringify","id","entryCount","json","entries","faceBoxes","outputs","regions","map","region","region_info","bounding_box","faceLocs","box","push","calculateFaceLocation","error","console","log","boxData","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","name","email","password","joined","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Navigation from '../components/navigation/Navigation.jsx'\r\nimport Logo from '../components/logo/Logo.jsx';\r\nimport ImageLinkForm from '../components/image link form/ImageLinkForm';\r\nimport Rank from '../components/rank/Rank.jsx';\r\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition.jsx'\r\nimport Signin from '../components/signin form/Signin.jsx';\r\nimport Register from '../components/register form/Register.jsx'\r\nimport Particles from 'react-particles-js';\r\nimport Clarifai from 'clarifai';\r\n\r\nconst particleOptions = {\r\n\tparticles: {\r\n\t\tnumber: {\r\n\t\t\tvalue: 30,\r\n\t\t\tdensity: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\tvalue_area: 800\r\n\t\t\t}\r\n\t\t},\r\n\t\tline_linked: {\r\n\t\t\tshadow: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\tcolor: \"#3CA9D1\",\r\n\t\t\t\tblur: 5\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst app = new Clarifai.App({\r\n\tapiKey: '3160b1eb71a7425b8b78e134bf56e940'\r\n});\r\n\r\nclass App extends React.Component {\r\n\r\n\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.state = {\r\n\t\t\t\tinput: '',\r\n\t\t\t\timageUrl: '',\r\n\t\t\t\tboxes: [],\r\n\t\t\t\troute: 'signin',\r\n\t\t\t\tsignedIn: false,\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tid: '',\r\n\t\t\t\t\tname: '',\r\n\t\t\t\t\temail:  '',\r\n\t\t\t\t\tpassword: '',\r\n\t\t\t\t\tentries: 0,\r\n\t\t\t\t\tjoined: ''\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t}\r\n\r\n\tchangeRoute = (route) => {\r\n\t\tthis.setState({route: route});\r\n\t}\r\n\r\n\tsignIn = () => {\r\n\t\tthis.setState({signedIn: true});\r\n\t}\r\n\r\n\tsignOut = () => {\r\n\t\tthis.setState({signedIn: false});\r\n\t}\r\n\r\n\tloadUser = (data) => {\r\n\t\tthis.setState({user: {...data}});\r\n\t}\r\n\r\n\tonInputChange = (event) => {\r\n\t\tthis.setState({ input: event.target.value });\r\n\t}\r\n\r\n\tonSubmit = async () => {\r\n\t\tthis.setState({ imageUrl: this.state.input, boxes: [] })\r\n\r\n\t\ttry {\r\n\t\t\tconst clarifaiResp = await app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input);\r\n\t\t\tif (clarifaiResp) {\r\n\t\t\t\tconst serverResp = await fetch('http://localhost:5000/image', {\r\n\t\t\t\t\tmethod: 'put',\r\n\t\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tid: this.state.user.id\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t\tconst entryCount = await serverResp.json();\r\n\t\t\t\tthis.setState({user: {\r\n\t\t\t\t\tentries: entryCount\r\n\t\t\t\t}})\r\n\t\t\t}\r\n\t\t\tconst faceBoxes = await clarifaiResp.outputs[0].data.regions.map(region => region.region_info.bounding_box);\r\n\t\t\tconst faceLocs = [];\r\n\t\t\tfor (let box of faceBoxes) {\r\n\t\t\t\tfaceLocs.push(this.calculateFaceLocation(box));\r\n\t\t\t}\r\n\t\t\tthis.setState({ boxes: faceLocs })\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('oops', error);\r\n\t\t}\r\n\t}\r\n\r\n\tcalculateFaceLocation = (boxData) => {\r\n\t\tconst image = document.getElementById('input-image');\r\n\t\tconst width = Number(image.width);\r\n\t\tconst height = Number(image.height);\r\n\t\treturn {\r\n\t\t\tleftCol: boxData.left_col * width,\r\n\t\t\ttopRow: boxData.top_row * height,\r\n\t\t\trightCol: width - (boxData.right_col * width),\r\n\t\t\tbottomRow: height - (boxData.bottom_row * height)\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { imageUrl, boxes, route, signedIn } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Particles className=\"particles\" params={particleOptions} />\r\n\t\t\t\t<Navigation changeRoute={this.changeRoute} isSignedIn={signedIn} signOut={this.signOut}/>\r\n\t\t\t\t{ (() => {\r\n\t\t\t\t\t\tif (route === 'signin') {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Logo />\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Signin changeRoute={this.changeRoute} signIn={this.signIn} loadUser={this.loadUser}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (route === 'home') {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t<Logo />\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Rank name={this.state.user.name} entryCount={this.state.user.entries}/>\r\n\t\t\t\t\t\t\t\t\t<ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onSubmit}/>\r\n\t\t\t\t\t\t\t\t\t<FaceRecognition imageUrl={imageUrl} boxes={boxes}/>\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (route === 'register') {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t<Logo />\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Register changeRoute={this.changeRoute} signIn={this.signIn} loadUser={this.loadUser}/>\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})()\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}